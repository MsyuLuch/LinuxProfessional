# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :nfs => {
              :box_name => "centos/7",
              :ip_addr => '192.168.3.205',
              :mem => '1024'
             }, 
  :master => {
              :box_name => "centos/7",
              :ip_addr => '192.168.3.203',
              :mem => '1024'
             },  
  :replica => {
              :box_name => "centos/7",
              :ip_addr => '192.168.3.204',
              :mem => '1024'
             },
  :proxy => {
             :box_name => "centos/7",
             :ip_addr => '192.168.3.201',
             :mem => '1024'
            },
  :web => {
              :box_name => "centos/7",
              :ip_addr => '192.168.3.202',
              :mem => '1024'
             },
  :monitoring => {
              :box_name => "centos/7",
              :ip_addr => '192.168.3.206',
              :mem => '1024'
             },   
  :elk => {
            :box_name => "centos/7",
            :ip_addr => '192.168.3.207',
            :mem => '4096'
          }                                 
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.network "public_network", bridge: "enp3s0", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", boxconfig[:mem]]
          end

          box.vm.provision :shell do |s|
             s.inline = 'mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh'
          end

      end
  end

  config.vm.provision "ansible" do |ansible|
  #ansible.verbose = "v"
  ansible.playbook = "provision/playbook.yml"
  ansible.become = "true"
  end

end

